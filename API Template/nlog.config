<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwExceptions="true"
      throwConfigExceptions="true"
      internalLogLevel="error"
      internalLogFile="internal-nlog.txt"
      >

	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
		<add assembly="NLog.Mongo"/>
	</extensions>

	<variable name="bodyJson" value="${replace:searchFor=\\\Spassword\\\S\\\S\\\s&quot;(?'pass'(.*))&quot;,:replaceWith=******:compileRegex=true:regex=true:replaceGroupName=pass:inner=${aspnet-item:bodyKey}}" />

	<targets async="true">
		<target name="SqlDatabaseTarget"
				xsi:type="Database"
				dbProvider="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient">
			<connectionString>${configsetting:item=DatabaseLogSql.ConnectionString}</connectionString>
			<install-command ignoreFailures="true">
				<text>
					IF NOT EXISTS (SELECT schema_name FROM information_schema.schemata WHERE schema_name = 'log')
					BEGIN
					EXEC ('CREATE SCHEMA log;');
					END;

					IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[log].[Log]') AND type in (N'U'))
					CREATE TABLE [log].[Log]
					(
					Id bigint primary key not null identity(1,1),
					Logged datetime2,
					Level nvarchar(10),
					LogMessage nvarchar(max),
					Exception [nvarchar](max) NULL,
					StackTrace [nvarchar](max) NULL,
					Path [nvarchar](max) NULL,
					Json [nvarchar](max) NULL,
					Ip [varchar](40) NULL
					);
				</text>
			</install-command>
			<commandText>
				INSERT INTO [log].[Log] (Logged,Level,LogMessage,Exception,StackTrace,Path,Json,Ip) VALUES (@Logged, @Level, @Message, @Exception, @StackTrace,@Path,@Json,@Ip)
			</commandText>
			<parameter name="@Logged" layout="${date}" />
			<parameter name="@Level" layout="${level}" />
			<parameter name="@Message" layout="${message}" />
			<parameter name="@Exception" layout=" ${exception:format=type,message,method:maxInnerExceptionLevel=10:innerFormat=shortType,message,method:innerExceptionSeparator=\n}" />
			<parameter name="@StackTrace" layout="${exception:format=StackTrace}" />
			<parameter name="@Json" layout="${bodyJson}" />
			<parameter name="@Path" layout="${aspnet-request-url} ${aspnet-request-querystring}" />
			<parameter name="@Ip" layout="${aspnet-request-ip}" />
		</target>

		<target name="MongoDatabaseTarget"
					xsi:type="Mongo"
					databaseName="Logs"
					collectionName="Api-">
			<connectionString>${configsetting:item=DatabaseLogMongo.ConnectionString}</connectionString>
			<field name="Properties" bsonType="Object">
				<layout type="JsonLayout" includeAllProperties="true" includeMdlc="true" maxRecursionLimit="10">
					<attribute name="ThreadID" layout="${threadid}" encode="false" />
					<attribute name="ProcessID" layout="${processid}" encode="false" />
					<attribute name="ProcessName" layout="${processname:fullName=true}" />
					<attribute name="RequestQuery" layout="${aspnet-request-querystring}" />
					<attribute name="RequestBody" layout="${bodyJson}"/>
					<attribute name="Ip" layout="${aspnet-request-ip}" />
				</layout>
			</field>
		</target>

		<target name="logconsole" xsi:type="ColoredConsole"></target>
	</targets>

	<rules>
		<logger name="*" minlevel="Trace" writeTo="SqlDatabaseTarget" />
		<logger name="*" minlevel="Trace" writeTo="MongoDatabaseTarget" />
		<logger name="*" minlevel="Trace" writeTo="logconsole" />
	</rules>
</nlog>